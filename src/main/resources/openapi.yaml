openapi: 3.0.1
info:
  title: desafio-spring-boot
  description: prueba tecnica
  version: 1.0.0

servers:
  - url: http://localhost:8080/api/v1

tags:
  - name: auth
    description: Endpoint para obtener JWT
  - name: tareas
    description: API que se encarga de administrar las tareas

components:
  securitySchemes:
    Bearer:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    MessageRsDTO:
      type: object
      properties:
        codigo:
          type: string
          example: "00"
        mensaje:
          type: string
          example: "jwt....."
    AuthRqDTO:
      type: object
      properties:
        username:
          type: string
          example: usuarioEjemplo
        password:
          type: string
          format: password
          example: contraseñaEjemplo
    TareaRqDTO:
      type: object
      properties:
        nombre:
          type: string
        descripcion:
          type: string
        storyPoint:
          type: integer
          format: int32
        usuarioId:
          type: integer
          format: int64
    TareaEstRqDTO:
      allOf:
        - $ref: '#/components/schemas/TareaRqDTO'
        - type: object
          properties:
            estadoTareaId:
              type: integer
              format: int64
    TareaRsDTO:
      type: object
      properties:
        nombre:
          type: string
        descripcion:
          type: string
        storyPoint:
          type: integer
          format: int32
        usuarioId:
          type: integer
          format: int64
        id:
          type: integer
          format: int64
        estadoTareaId:
          type: integer
          format: int64
paths:
  /authenticate:
    post:
      tags:
        - auth
      summary: Autenticar usuario y obtener token
      description: >-
        Este endpoint autentica a los usuarios basándose en sus credenciales (username y password) y retorna un JWT para ser utilizado en solicitudes subsiguientes.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthRqDTO'
      responses:
        '200':
          description: Autenticación exitosa, JWT retornado.
          content:
            application/json:
              schema:
                type: object
                properties:
                  codigo:
                    type: string
                    example: "00"
                  mensaje:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        '400':
          description: Error en la petición
          content:
            application/json:
              schema:
                type: object
                properties:
                  codigo:
                    type: string
                    example: "01"
                  mensaje:
                    type: string
                    example: Error en la solicitud.
        '401':
          description: Autenticación fallida.
          content:
            application/json:
              schema:
                type: object
                properties:
                  codigo:
                    type: string
                    example: "01"
                  mensaje:
                    type: string
                    example: Credenciales inválidas
  /tarea:
    post:
      tags:
        - tareas
      summary: Crear una nueva tarea
      operationId: createTarea
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TareaRqDTO'
            example:
              nombre: "Nueva Tarea"
              descripcion: "Descripción de la nueva tarea"
              storyPoint: 5
              usuarioId: 1
      security:
        - Bearer: []
      responses:
        '201':
          description: Creada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TareaRsDTO'
        '400':
          description: Error al crear Tarea
          content:
            application/json:
              schema:
                type: object
                properties:
                  mensaje:
                    type: string
                    example: "Error al crear tarea ..."
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                type: object
                properties:
                  mensaje:
                    type: string
                    example: "Token Inválido."
    get:
      tags:
        - tareas
      summary: Obtiene una lista de tareas
      operationId: getTareas
      security:
        - Bearer: []
      responses:
        '200':
          description: Recuperadas exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TareaRsDTO'
        '400':
          description: Error al obtener la lista de tareas
          content:
            application/json:
              schema:
                type: object
                properties:
                  mensaje:
                    type: string
                    example: "No se pudo obtener la lista de tareas."
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                type: object
                properties:
                  mensaje:
                    type: string
                    example: "Token Inválido."
  /tarea/{id}:
    get:
      tags:
        - tareas
      summary: Obtiene una tarea por ID
      operationId: getTareaById
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Recuperada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TareaRsDTO'
        '400':
          description: Error al obtener la tarea
          content:
            application/json:
              schema:
                type: object
                properties:
                  mensaje:
                    type: string
                    example: "No se pudo obtener la tarea. Tarea no existe."
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                type: object
                properties:
                  mensaje:
                    type: string
                    example: "Token Inválido."
    put:
      tags:
        - tareas
      summary: Actualizar una tarea por ID
      operationId: updateTareaById
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TareaEstRqDTO'
      responses:
        '200':
          description: Actualizada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TareaRsDTO'
        '400':
          description: Error al actualizar tarea
          content:
            application/json:
              schema:
                type: object
                properties:
                  mensaje:
                    type: string
                    example: "No se pudo editar Tarea con ID: 6.Tarea no existe."
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                type: object
                properties:
                  mensaje:
                    type: string
                    example: "Token Inválido."
    delete:
      tags:
        - tareas
      summary: Eliminar una tarea por ID
      operationId: deleteTareaById
      security:
        - Bearer: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Eliminada exitosamente
        '400':
          description: Error al eliminar tarea
          content:
            application/json:
              schema:
                type: object
                properties:
                  mensaje:
                    type: string
                    example: "No se pudo eliminar la tarea ID: 4.Tarea no existe."
        '401':
          description: No autorizado
          content:
            application/json:
              schema:
                type: object
                properties:
                  mensaje:
                    type: string
                    example: "Token Inválido."